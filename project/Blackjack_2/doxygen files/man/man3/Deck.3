.TH "Deck< T >" 3 "Blackjack_1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Deck< T > \- Template class representing a deck of cards\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <Deck\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDeck\fP ()"
.br
.RI "Default constructor\&. Initializes a single deck\&. "
.ti -1c
.RI "\fBDeck\fP (int numDecks)"
.br
.RI "Constructor for multiple decks\&. "
.ti -1c
.RI "\fBDeck\fP (const \fBDeck\fP &other)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "\fBDeck\fP & \fBoperator=\fP (const \fBDeck\fP &other)"
.br
.RI "Assignment operator\&. "
.ti -1c
.RI "\fB~Deck\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "void \fBshuffle\fP ()"
.br
.RI "Shuffle the deck\&. Randomizes card order and clears dealt cards tracking\&. "
.ti -1c
.RI "T \fBdrawCard\fP ()"
.br
.RI "Draw a card from the deck\&. "
.ti -1c
.RI "bool \fBisEmpty\fP () const"
.br
.RI "Check if deck is empty\&. "
.ti -1c
.RI "int \fBremainingCards\fP () const"
.br
.RI "Get number of remaining cards\&. "
.ti -1c
.RI "T \fBoperator[]\fP (int index) const"
.br
.RI "Array subscript operator\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitializeDeck\fP (int numDecks)"
.br
.RI "Initialize deck(s) with cards\&. "
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename U > class \fBDeckLogger\fP"
.br
.RI "Friend class for debugging purposes\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T = Card>
.br
class Deck< T >"Template class representing a deck of cards\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP \fBCard\fP type that comprises the deck (defaults to \fBCard\fP class) Implements a deck of cards with shuffle, draw and tracking functionality\&. Supports multiple deck initialization and duplicate card detection\&. 
.RE
.PP

.PP
Definition at line \fB27\fP of file \fBDeck\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T > \fBDeck\fP< T >\fB::Deck\fP ()"

.PP
Default constructor\&. Initializes a single deck\&. 
.PP
Definition at line \fB107\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > \fBDeck\fP< T >\fB::Deck\fP (int numDecks)"

.PP
Constructor for multiple decks\&. 
.PP
\fBParameters\fP
.RS 4
\fInumDecks\fP Number of decks to initialize 
.RE
.PP

.PP
Definition at line \fB112\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > \fBDeck\fP< T >\fB::Deck\fP (const \fBDeck\fP< T > & other)"

.PP
Copy constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP \fBDeck\fP to copy from 
.RE
.PP

.PP
Definition at line \fB171\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > \fBDeck\fP< T >::~\fBDeck\fP ()"

.PP
Destructor\&. 
.PP
Definition at line \fB188\fP of file \fBDeck\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T > T \fBDeck\fP< T >::drawCard ()"

.PP
Draw a card from the deck\&. 
.PP
\fBReturns\fP
.RS 4
T The drawn card 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIruntime_error\fP if deck is empty 
.RE
.PP
\fBNote\fP
.RS 4
Automatically reinitializes deck if duplicate card detected 
.RE
.PP

.PP
Definition at line \fB136\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > void \fBDeck\fP< T >::initializeDeck (int numDecks)\fR [protected]\fP"

.PP
Initialize deck(s) with cards\&. 
.PP
\fBParameters\fP
.RS 4
\fInumDecks\fP Number of decks to initialize 
.RE
.PP

.PP
Definition at line \fB117\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > bool \fBDeck\fP< T >::isEmpty () const"

.PP
Check if deck is empty\&. 
.PP
\fBReturns\fP
.RS 4
bool True if no cards remain 
.RE
.PP

.PP
Definition at line \fB160\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > \fBDeck\fP< T > & \fBDeck\fP< T >::operator= (const \fBDeck\fP< T > & other)"

.PP
Assignment operator\&. 
.PP
\fBParameters\fP
.RS 4
\fIother\fP \fBDeck\fP to assign from 
.RE
.PP
\fBReturns\fP
.RS 4
\fBDeck\fP& Reference to this deck 
.RE
.PP

.PP
Definition at line \fB178\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > T \fBDeck\fP< T >::operator[] (int index) const"

.PP
Array subscript operator\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Index of card to access 
.RE
.PP
\fBReturns\fP
.RS 4
T \fBCard\fP at specified index 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIout_of_range\fP if index is invalid 
.RE
.PP

.PP
Definition at line \fB195\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > int \fBDeck\fP< T >::remainingCards () const"

.PP
Get number of remaining cards\&. 
.PP
\fBReturns\fP
.RS 4
int Number of undealt cards 
.RE
.PP

.PP
Definition at line \fB165\fP of file \fBDeck\&.h\fP\&.
.SS "template<typename T > void \fBDeck\fP< T >::shuffle ()"

.PP
Shuffle the deck\&. Randomizes card order and clears dealt cards tracking\&. 
.PP
Definition at line \fB130\fP of file \fBDeck\&.h\fP\&.
.SH "Friends And Related Symbol Documentation"
.PP 
.SS "template<typename T  = Card> template<typename U > friend class DeckLogger\fR [friend]\fP"

.PP
Friend class for debugging purposes\&. 
.PP
Definition at line \fB89\fP of file \fBDeck\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Blackjack_1 from the source code\&.
