<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_player" xml:lang="en-US">
<title>Player Class Reference</title>
<indexterm><primary>Player</primary></indexterm>
<para>

<para>Abstract base class for blackjack players Defines common functionality for managing hands, bets, funds and statistics. </para>
 
</para>
<para>
<computeroutput>#include &lt;Player.h&gt;</computeroutput>
</para>
Inheritance diagram for Player:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Player:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_player_1affe0cc3cb714f6deb4e62f0c0d3f1fd8">Player</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_player_1af6dcaf3d84b3666f854ec7b48392925e">Player</link> (const string &amp;<link linkend="_class_player_1acf0355128a99ee20ad9931b760fb2de1">name</link>, int <link linkend="_class_player_1a38a3243cd8b99085446d1b235cce825c">funds</link>=1000)</para>

<para>Constructor with name and initial funds. </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_player_1a749d2c00e1fe0f5c2746f7505a58c062">~Player</link> ()</para>

<para>Virtual destructor. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_player_1a395de65d83d94f6298af5b5dabaf9731">wantHit</link> ()=0</para>

<para>Pure virtual method for hit/stand decision. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_player_1a9e88f13cf784a6f938256b77a69bcc65">dispHand</link> () const =0</para>

<para>Pure virtual method to display player&apos;s hand. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_player_1ad5ff3d1b054718c9e69da62dea18ab01">addCard</link> (const <link linkend="_class_card">Card</link> &amp;card)</para>

<para>Add card to player&apos;s hand. </para>
</listitem>
            <listitem><para>virtual int <link linkend="_class_player_1a26f1447acb4414e57c534cd3b29c47ac">getVal</link> () const</para>

<para>Calculate hand value. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_player_1ac87d002aca38e7e814d5bf6e97c432e1">isBust</link> () const</para>

<para>Check if hand value exceeds 21. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_player_1af1dda5581f5f56c61bac0cf07a300bdd">clear</link> ()</para>

<para>Clear player&apos;s hand. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_player_1a7bd5bdcf24baf66b2f95947acb478128">setBet</link> (int amt)</para>

<para>Set bet amount. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1afb68622bbe0d61b7e9c54d21217e0405">addWin</link> (int amt)</para>

<para>Add winnings to funds. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a7db9632e9164847ec9df66ed95efa60d">loseBet</link> (int amt)</para>

<para>Deduct lost bet from funds. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1aba58b095f7f82dfdc4df8a167df2695d">setFund</link> (int amt)</para>

<para>Set player&apos;s funds. </para>
</listitem>
            <listitem><para>void <link linkend="_class_player_1a40c5014c6f8ac87b8707c8c611987e9f">addGame</link> (bool won, int amt)</para>

<para>Record game result in stats. </para>
</listitem>
            <listitem><para>int <link linkend="_class_player_1a2d8034eb9889b2fbd6ca2e1e9de0d1f4">getRate</link> () const</para>

<para>Get win rate from stats. </para>
</listitem>
            <listitem><para><link linkend="_class_p_stats">PStats</link> &amp; <link linkend="_class_player_1a68feb8bbe38a311b9f538e7e05e0510c">getStat</link> ()</para>

<para>Get player statistics. </para>
</listitem>
            <listitem><para>string <link linkend="_class_player_1a4939193fc637f75bf7a11118334dae7e">getName</link> () const</para>

<para>Get player&apos;s name. </para>
</listitem>
            <listitem><para>int <link linkend="_class_player_1ae0ccc5586972501fcab0f969cab3bf95">getFund</link> () const</para>

<para>Get current funds. </para>
</listitem>
            <listitem><para>int <link linkend="_class_player_1af72bd8540101dd0f76c4a00c6b3a7982">getBet</link> () const</para>

<para>Get current bet. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_player_1a9cb83df3e8030640711108c5c4ffab4f">operator==</link> (const <link linkend="_class_player">Player</link> &amp;other) const</para>

<para>Equality comparison. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_player_1a56ac1b030897173395f18c99f522827b">operator!=</link> (const <link linkend="_class_player">Player</link> &amp;other) const</para>

<para>Inequality comparison. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>string <link linkend="_class_player_1acf0355128a99ee20ad9931b760fb2de1">name</link></para>
</listitem>
            <listitem><para>vector&lt; <link linkend="_class_card">Card</link> &gt; <link linkend="_class_player_1a120127b3026b271cb7b1a5b82d635503">hand</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_player_1a38a3243cd8b99085446d1b235cce825c">funds</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_player_1a9ad8e498594182ced9e8091de332f6d0">bet</link></para>
</listitem>
            <listitem><para><link linkend="_class_p_stats">PStats</link> <link linkend="_class_player_1a4d0371e1f41da5ef5cd8a5a761fe5886">stats</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Abstract base class for blackjack players Defines common functionality for managing hands, bets, funds and statistics. </para>
<para>
Definition at line <link linkend="__player_8h_source_1l00023">23</link> of file <link linkend="__player_8h_source">Player.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_player_1affe0cc3cb714f6deb4e62f0c0d3f1fd8"/><section>
    <title>Player()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Player</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>Player</secondary></indexterm>
<para><computeroutput>Player::Player ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>

<para>Default constructor Initializes anonymous player with default values.</para>

<para>Base <link linkend="_class_player">Player</link> Class Implementation </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00018">18</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1af6dcaf3d84b3666f854ec7b48392925e"/><section>
    <title>Player()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Player</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>Player</secondary></indexterm>
<para><computeroutput>Player::Player (const string &amp; n, int f = <computeroutput>1000</computeroutput>
)</computeroutput></para><para>

<para>Constructor with name and initial funds. </para>
</para>

<para>Parameterized constructor.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para><link linkend="_class_player">Player</link>&apos;s name </para>
</entry>
                            </row>
                            <row>
<entry>funds</entry><entry>
<para>Initial funds (defaults to 1000)</para>
</entry>
                            </row>
                            <row>
<entry>n</entry><entry>
<para><link linkend="_class_player">Player</link> name </para>
</entry>
                            </row>
                            <row>
<entry>f</entry><entry>
<para>Initial funds </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00030">30</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a749d2c00e1fe0f5c2746f7505a58c062"/><section>
    <title>~Player()</title>
<indexterm><primary>~Player</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>~Player</secondary></indexterm>
<para><computeroutput>Player::~Player ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Virtual destructor. </para>
</para>

<para>Destructor. </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00040">40</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_a749d2c00e1fe0f5c2746f7505a58c062_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_player_1ad5ff3d1b054718c9e69da62dea18ab01"/><section>
    <title>addCard()</title>
<indexterm><primary>addCard</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>addCard</secondary></indexterm>
<para><computeroutput>void Player::addCard (const <link linkend="_class_card">Card</link> &amp; card)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Add card to player&apos;s hand. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>card</entry><entry>
<para><link linkend="_class_card">Card</link> to add </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00048">48</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a40c5014c6f8ac87b8707c8c611987e9f"/><section>
    <title>addGame()</title>
<indexterm><primary>addGame</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>addGame</secondary></indexterm>
<para><computeroutput>void Player::addGame (bool won, int amt)</computeroutput></para><para>

<para>Record game result in stats. </para>
</para>

<para>Record game result.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>won</entry><entry>
<para>Whether game was won </para>
</entry>
                            </row>
                            <row>
<entry>amt</entry><entry>
<para>Amount won/lost </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00142">142</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_a40c5014c6f8ac87b8707c8c611987e9f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1afb68622bbe0d61b7e9c54d21217e0405"/><section>
    <title>addWin()</title>
<indexterm><primary>addWin</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>addWin</secondary></indexterm>
<para><computeroutput>void Player::addWin (int amt)</computeroutput></para><para>

<para>Add winnings to funds. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>amt</entry><entry>
<para>Amount won </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00117">117</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1af1dda5581f5f56c61bac0cf07a300bdd"/><section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>clear</secondary></indexterm>
<para><computeroutput>void Player::clear ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Clear player&apos;s hand. </para>
</para>

<para>Clear hand and bet. </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00094">94</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_af1dda5581f5f56c61bac0cf07a300bdd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1a9e88f13cf784a6f938256b77a69bcc65"/><section>
    <title>dispHand()</title>
<indexterm><primary>dispHand</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>dispHand</secondary></indexterm>
<para><computeroutput>virtual void Player::dispHand ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Pure virtual method to display player&apos;s hand. </para>
</para>
<para>
Implemented in <link linkend="_class_dealer_1aa4a7ca18077f341fe8dfbc3e641de6f6">Dealer</link>, and <link linkend="_class_human_1a41589a8a97907c66a633f2aecab9c440">Human</link>.</para>
</section>
<anchor xml:id="_class_player_1af72bd8540101dd0f76c4a00c6b3a7982"/><section>
    <title>getBet()</title>
<indexterm><primary>getBet</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getBet</secondary></indexterm>
<para><computeroutput>int Player::getBet ( ) const</computeroutput></para><para>

<para>Get current bet. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int Current bet amount </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00155">155</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1ae0ccc5586972501fcab0f969cab3bf95"/><section>
    <title>getFund()</title>
<indexterm><primary>getFund</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getFund</secondary></indexterm>
<para><computeroutput>int Player::getFund ( ) const</computeroutput></para><para>

<para>Get current funds. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int Available funds </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00154">154</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_ae0ccc5586972501fcab0f969cab3bf95_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1a4939193fc637f75bf7a11118334dae7e"/><section>
    <title>getName()</title>
<indexterm><primary>getName</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getName</secondary></indexterm>
<para><computeroutput>string Player::getName ( ) const</computeroutput></para><para>

<para>Get player&apos;s name. </para>
</para>

<para><formalpara><title>Returns</title>

<para>string <link linkend="_class_player">Player</link> name </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00153">153</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_a4939193fc637f75bf7a11118334dae7e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1a2d8034eb9889b2fbd6ca2e1e9de0d1f4"/><section>
    <title>getRate()</title>
<indexterm><primary>getRate</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getRate</secondary></indexterm>
<para><computeroutput>int Player::getRate ( ) const</computeroutput></para><para>

<para>Get win rate from stats. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int Win percentage</para>
</formalpara>
Getter Methods </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00152">152</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_a2d8034eb9889b2fbd6ca2e1e9de0d1f4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1a68feb8bbe38a311b9f538e7e05e0510c"/><section>
    <title>getStat()</title>
<indexterm><primary>getStat</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getStat</secondary></indexterm>
<para><computeroutput><link linkend="_class_p_stats">PStats</link> &amp; Player::getStat ( )</computeroutput></para><para>

<para>Get player statistics. </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_class_p_stats">PStats</link>&amp; Reference to player stats </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00156">156</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a26f1447acb4414e57c534cd3b29c47ac"/><section>
    <title>getVal()</title>
<indexterm><primary>getVal</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>getVal</secondary></indexterm>
<para><computeroutput>int Player::getVal ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Calculate hand value. </para>
</para>

<para>Calculate hand value considering aces.</para>

<para><formalpara><title>Returns</title>

<para>int Total value of cards in hand</para>

<para>int Total hand value </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00056">56</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_a26f1447acb4414e57c534cd3b29c47ac_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1ac87d002aca38e7e814d5bf6e97c432e1"/><section>
    <title>isBust()</title>
<indexterm><primary>isBust</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>isBust</secondary></indexterm>
<para><computeroutput>bool Player::isBust ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Check if hand value exceeds 21. </para>
</para>

<para>Check if player has bust.</para>

<para><formalpara><title>Returns</title>

<para>bool True if player has bust</para>

<para>bool True if hand value exceeds 21 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00087">87</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_ac87d002aca38e7e814d5bf6e97c432e1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_player_1a7db9632e9164847ec9df66ed95efa60d"/><section>
    <title>loseBet()</title>
<indexterm><primary>loseBet</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>loseBet</secondary></indexterm>
<para><computeroutput>void Player::loseBet (int amt)</computeroutput></para><para>

<para>Deduct lost bet from funds. </para>
</para>

<para>Handle lost bet.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>amt</entry><entry>
<para>Amount lost </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00125">125</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a56ac1b030897173395f18c99f522827b"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>bool Player::operator!= (const <link linkend="_class_player">Player</link> &amp; other) const</computeroutput></para><para>

<para>Inequality comparison. </para>
</para>

<para>Inequality comparison operator.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para><link linkend="_class_player">Player</link> to compare with </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool True if players are not equal</para>
</formalpara>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para><link linkend="_class_player">Player</link> to compare with </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00170">170</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a9cb83df3e8030640711108c5c4ffab4f"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool Player::operator== (const <link linkend="_class_player">Player</link> &amp; other) const</computeroutput></para><para>

<para>Equality comparison. </para>
</para>

<para>Equality comparison operator.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para><link linkend="_class_player">Player</link> to compare with </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool True if players are equal</para>
</formalpara>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para><link linkend="_class_player">Player</link> to compare with </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00162">162</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a7bd5bdcf24baf66b2f95947acb478128"/><section>
    <title>setBet()</title>
<indexterm><primary>setBet</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>setBet</secondary></indexterm>
<para><computeroutput>bool Player::setBet (int amt)</computeroutput></para><para>

<para>Set bet amount. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>amt</entry><entry>
<para>Bet amount </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool True if bet is valid and set</para>
</formalpara>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>amt</entry><entry>
<para>Amount to bet </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool True if bet is valid and set </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00104">104</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1aba58b095f7f82dfdc4df8a167df2695d"/><section>
    <title>setFund()</title>
<indexterm><primary>setFund</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>setFund</secondary></indexterm>
<para><computeroutput>void Player::setFund (int amt)</computeroutput></para><para>

<para>Set player&apos;s funds. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>amt</entry><entry>
<para>New fund amount </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__player_8cpp_source_1l00133">133</link> of file <link linkend="__player_8cpp_source">Player.cpp</link>.</para>
</section>
<anchor xml:id="_class_player_1a395de65d83d94f6298af5b5dabaf9731"/><section>
    <title>wantHit()</title>
<indexterm><primary>wantHit</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>wantHit</secondary></indexterm>
<para><computeroutput>virtual bool Player::wantHit ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Pure virtual method for hit/stand decision. </para>
</para>

<para><formalpara><title>Returns</title>

<para>bool True if player wants another card </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_class_dealer_1a832662f2a7de35cdb6c3c68259056278">Dealer</link>, and <link linkend="_class_human_1aa6cf22859de15a59d14bffeac4a63c5b">Human</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_player_1a9ad8e498594182ced9e8091de332f6d0"/><section>
    <title>bet</title>
<indexterm><primary>bet</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>bet</secondary></indexterm>
<para><computeroutput>int Player::bet<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Current bet amount </para>
<para>
Definition at line <link linkend="__player_8h_source_1l00144">144</link> of file <link linkend="__player_8h_source">Player.h</link>.</para>
</section>
<anchor xml:id="_class_player_1a38a3243cd8b99085446d1b235cce825c"/><section>
    <title>funds</title>
<indexterm><primary>funds</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>funds</secondary></indexterm>
<para><computeroutput>int Player::funds<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Available funds </para>
<para>
Definition at line <link linkend="__player_8h_source_1l00143">143</link> of file <link linkend="__player_8h_source">Player.h</link>.</para>
</section>
<anchor xml:id="_class_player_1a120127b3026b271cb7b1a5b82d635503"/><section>
    <title>hand</title>
<indexterm><primary>hand</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>hand</secondary></indexterm>
<para><computeroutput>vector&lt;<link linkend="_class_card">Card</link>&gt; Player::hand<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Current hand of cards </para>
<para>
Definition at line <link linkend="__player_8h_source_1l00142">142</link> of file <link linkend="__player_8h_source">Player.h</link>.</para>
</section>
<anchor xml:id="_class_player_1acf0355128a99ee20ad9931b760fb2de1"/><section>
    <title>name</title>
<indexterm><primary>name</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>name</secondary></indexterm>
<para><computeroutput>string Player::name<computeroutput>[protected]</computeroutput></computeroutput></para>
<para><link linkend="_class_player">Player</link>&apos;s name </para>
<para>
Definition at line <link linkend="__player_8h_source_1l00141">141</link> of file <link linkend="__player_8h_source">Player.h</link>.</para>
</section>
<anchor xml:id="_class_player_1a4d0371e1f41da5ef5cd8a5a761fe5886"/><section>
    <title>stats</title>
<indexterm><primary>stats</primary><secondary>Player</secondary></indexterm>
<indexterm><primary>Player</primary><secondary>stats</secondary></indexterm>
<para><computeroutput><link linkend="_class_p_stats">PStats</link> Player::stats<computeroutput>[protected]</computeroutput></computeroutput></para>
<para><link linkend="_class_player">Player</link> statistics </para>
<para>
Definition at line <link linkend="__player_8h_source_1l00145">145</link> of file <link linkend="__player_8h_source">Player.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
<link linkend="__player_8h">Player.h</link><link linkend="__player_8cpp">Player.cpp</link></section>
</section>
