<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__player_stats_8cpp_source" xml:lang="en-US">
<title>PlayerStats.cpp</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__player_stats_8cpp_source_1l00001"/>00001 
<anchor xml:id="__player_stats_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__player_stats_8h">PlayerStats.h</link>&quot;</emphasis>
<anchor xml:id="__player_stats_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
<anchor xml:id="__player_stats_8cpp_source_1l00010"/>00010 
<anchor xml:id="__player_stats_8cpp_source_1l00012"/>00012 <emphasis role="keywordtype">int</emphasis>&#32;PStats::num&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00013"/>00013 
<anchor xml:id="__player_stats_8cpp_source_1l00019"/><link linkend="_class_p_stats_1ad70a5048fd1426d2b59c4f3e289551b3">00019</link> <link linkend="_class_p_stats_1ad70a5048fd1426d2b59c4f3e289551b3">PStats::PStats</link>(<emphasis role="keywordtype">int</emphasis>&#32;maxSz)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_game_res">GameRes</link>[maxSz];
<anchor xml:id="__player_stats_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;max&#32;=&#32;maxSz;
<anchor xml:id="__player_stats_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;rate&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;games&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;wins&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__player_stats_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(bad_alloc&amp;&#32;ba)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;runtime_error(<emphasis role="stringliteral">&quot;Memory&#32;fail&quot;</emphasis>);
<anchor xml:id="__player_stats_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00031"/>00031 }
<anchor xml:id="__player_stats_8cpp_source_1l00032"/>00032 
<anchor xml:id="__player_stats_8cpp_source_1l00038"/><link linkend="_class_p_stats_1ac2ee6a18282878cd56ca25af109b97d2">00038</link> <link linkend="_class_p_stats_1ad70a5048fd1426d2b59c4f3e289551b3">PStats::PStats</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_p_stats">PStats</link>&amp;&#32;old)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_game_res">GameRes</link>[old.max];
<anchor xml:id="__player_stats_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;max&#32;=&#32;old.max;
<anchor xml:id="__player_stats_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;old.size;
<anchor xml:id="__player_stats_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;rate&#32;=&#32;old.rate;
<anchor xml:id="__player_stats_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;games&#32;=&#32;old.games;
<anchor xml:id="__player_stats_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;wins&#32;=&#32;old.wins;
<anchor xml:id="__player_stats_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__player_stats_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size;&#32;i++)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;old.res[i];
<anchor xml:id="__player_stats_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;num++;
<anchor xml:id="__player_stats_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(bad_alloc&amp;&#32;ba)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;runtime_error(<emphasis role="stringliteral">&quot;Copy&#32;fail&quot;</emphasis>);
<anchor xml:id="__player_stats_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00054"/>00054 }
<anchor xml:id="__player_stats_8cpp_source_1l00055"/>00055 
<anchor xml:id="__player_stats_8cpp_source_1l00060"/><link linkend="_class_p_stats_1a72f828eccdf8b9515b8d60cd08a424ce">00060</link> <link linkend="_class_p_stats_1a72f828eccdf8b9515b8d60cd08a424ce">PStats::~PStats</link>()&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;res;
<anchor xml:id="__player_stats_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;num--;
<anchor xml:id="__player_stats_8cpp_source_1l00063"/>00063 }
<anchor xml:id="__player_stats_8cpp_source_1l00064"/>00064 
<anchor xml:id="__player_stats_8cpp_source_1l00071"/><link linkend="_class_p_stats_1a8f7ad3aadacb64cbe4909d3c83fc81f2">00071</link> <link linkend="_class_p_stats">PStats</link>&amp;&#32;<link linkend="_class_p_stats_1a8f7ad3aadacb64cbe4909d3c83fc81f2">PStats::operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_p_stats">PStats</link>&amp;&#32;rhs)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;rhs)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;res;
<anchor xml:id="__player_stats_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_game_res">GameRes</link>[rhs.max];
<anchor xml:id="__player_stats_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max&#32;=&#32;rhs.max;
<anchor xml:id="__player_stats_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;rhs.size;
<anchor xml:id="__player_stats_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rate&#32;=&#32;rhs.rate;
<anchor xml:id="__player_stats_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;games&#32;=&#32;rhs.games;
<anchor xml:id="__player_stats_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wins&#32;=&#32;rhs.wins;
<anchor xml:id="__player_stats_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__player_stats_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size;&#32;i++)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;rhs.res[i];
<anchor xml:id="__player_stats_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(bad_alloc&amp;&#32;ba)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;runtime_error(<emphasis role="stringliteral">&quot;Set&#32;fail&quot;</emphasis>);
<anchor xml:id="__player_stats_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__player_stats_8cpp_source_1l00090"/>00090 }
<anchor xml:id="__player_stats_8cpp_source_1l00091"/>00091 
<anchor xml:id="__player_stats_8cpp_source_1l00097"/><link linkend="_class_p_stats_1abc6c2b71cdf9ad50349c48aa3254b73c">00097</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_p_stats_1abc6c2b71cdf9ad50349c48aa3254b73c">PStats::setAll</link>(<emphasis role="keywordtype">int</emphasis>&#32;gms,&#32;<emphasis role="keywordtype">int</emphasis>&#32;wns)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;games&#32;=&#32;gms;
<anchor xml:id="__player_stats_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;wins&#32;=&#32;wns;
<anchor xml:id="__player_stats_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(games&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;rate&#32;=&#32;(wins&#32;*&#32;100)&#32;/&#32;games;
<anchor xml:id="__player_stats_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;rate&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00105"/>00105 }
<anchor xml:id="__player_stats_8cpp_source_1l00106"/>00106 
<anchor xml:id="__player_stats_8cpp_source_1l00111"/><link linkend="_class_p_stats_1a00b301240ffc5f899e123f81b7adb30f">00111</link> <link linkend="_struct_stats">Stats</link>&#32;<link linkend="_class_p_stats_1a00b301240ffc5f899e123f81b7adb30f">PStats::getAll</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__player_stats_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{games,&#32;wins};
<anchor xml:id="__player_stats_8cpp_source_1l00113"/>00113 }
<anchor xml:id="__player_stats_8cpp_source_1l00114"/>00114 
<anchor xml:id="__player_stats_8cpp_source_1l00120"/><link linkend="_class_p_stats_1a497ca6c7be75c1cffb6c9887e6182732">00120</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_p_stats_1a497ca6c7be75c1cffb6c9887e6182732">PStats::add</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_game_res">GameRes</link>&amp;&#32;newRes)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;&gt;=&#32;max)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;runtime_error(<emphasis role="stringliteral">&quot;Stats&#32;full&quot;</emphasis>);
<anchor xml:id="__player_stats_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;
<anchor xml:id="__player_stats_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;res[size++]&#32;=&#32;newRes;
<anchor xml:id="__player_stats_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;games++;
<anchor xml:id="__player_stats_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(newRes.<link linkend="_class_game_res_1adad8fbe33cfe6f4f8279dee29bd0a3b7">isWin</link>())&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;wins++;
<anchor xml:id="__player_stats_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;
<anchor xml:id="__player_stats_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(games&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;rate&#32;=&#32;(wins&#32;*&#32;100)&#32;/&#32;games;
<anchor xml:id="__player_stats_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00134"/>00134 }
<anchor xml:id="__player_stats_8cpp_source_1l00135"/>00135 
<anchor xml:id="__player_stats_8cpp_source_1l00140"/><link linkend="_class_p_stats_1a7056bb19a53168832c92902017bc842a">00140</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_p_stats_1a7056bb19a53168832c92902017bc842a">PStats::getRate</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__player_stats_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rate;
<anchor xml:id="__player_stats_8cpp_source_1l00142"/>00142 }
<anchor xml:id="__player_stats_8cpp_source_1l00143"/>00143 
<anchor xml:id="__player_stats_8cpp_source_1l00149"/><link linkend="_class_p_stats_1a2804566a8a597631bc32976a29b9df15">00149</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_stats_1a2804566a8a597631bc32976a29b9df15">PStats::operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_p_stats">PStats</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__player_stats_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rate&#32;&lt;&#32;rhs.rate;
<anchor xml:id="__player_stats_8cpp_source_1l00151"/>00151 }
<anchor xml:id="__player_stats_8cpp_source_1l00152"/>00152 
<anchor xml:id="__player_stats_8cpp_source_1l00158"/><link linkend="_class_p_stats_1aa15d30a9ebfadb328ea52051644aefdc">00158</link> <link linkend="_class_p_stats">PStats</link>&#32;<link linkend="_class_p_stats_1aa15d30a9ebfadb328ea52051644aefdc">PStats::operator+</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_p_stats">PStats</link>&amp;&#32;rhs)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__player_stats_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;<link linkend="_class_p_stats">PStats</link>&#32;tmp(max&#32;+&#32;rhs.max);
<anchor xml:id="__player_stats_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;tmp.size&#32;=&#32;0;
<anchor xml:id="__player_stats_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;tmp.rate&#32;=&#32;(rate&#32;+&#32;rhs.rate)&#32;/&#32;2;
<anchor xml:id="__player_stats_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;
<anchor xml:id="__player_stats_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size;&#32;i++)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.res[tmp.size++]&#32;=&#32;res[i];
<anchor xml:id="__player_stats_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;rhs.size;&#32;i++)&#32;{
<anchor xml:id="__player_stats_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp.res[tmp.size++]&#32;=&#32;rhs.res[i];
<anchor xml:id="__player_stats_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;}
<anchor xml:id="__player_stats_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;
<anchor xml:id="__player_stats_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tmp;
<anchor xml:id="__player_stats_8cpp_source_1l00171"/>00171 }
</programlisting></section>
