<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__deck_8h_source" xml:lang="en-US">
<title>Deck.h</title>
<programlisting linenumbering="unnumbered"><anchor xml:id="__deck_8h_source_1l00001"/>00001 <emphasis role="comment">/*&#32;</emphasis>
<anchor xml:id="__deck_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;File:&#32;&#32;&#32;Deck.h</emphasis>
<anchor xml:id="__deck_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Author:&#32;Ireoluwa&#32;Dairo</emphasis>
<anchor xml:id="__deck_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__deck_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Created&#32;on&#32;November&#32;27,&#32;2024,&#32;3:55&#32;PM</emphasis>
<anchor xml:id="__deck_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__deck_8h_source_1l00007"/>00007 
<anchor xml:id="__deck_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#ifndef&#32;DECK_H</emphasis>
<anchor xml:id="__deck_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#define&#32;DECK_H</emphasis>
<anchor xml:id="__deck_8h_source_1l00010"/>00010 
<anchor xml:id="__deck_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__deck_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
<anchor xml:id="__deck_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
<anchor xml:id="__deck_8h_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
<anchor xml:id="__deck_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;Card.h&quot;</emphasis>
<anchor xml:id="__deck_8h_source_1l00016"/>00016 
<anchor xml:id="__deck_8h_source_1l00017"/>00017 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="__deck_8h_source_1l00018"/>00018 
<anchor xml:id="__deck_8h_source_1l00019"/>00019 <emphasis role="comment">//&#32;Template&#32;class&#32;for&#32;Deck</emphasis>
<anchor xml:id="__deck_8h_source_1l00020"/>00020 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&#32;=&#32;Card&gt;
<anchor xml:id="__deck_8h_source_1l00021"/><link linkend="_class_deck">00021</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_deck">Deck</link>&#32;{
<anchor xml:id="__deck_8h_source_1l00022"/>00022 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__deck_8h_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructors</emphasis>
<anchor xml:id="__deck_8h_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="_class_deck">Deck</link>();
<anchor xml:id="__deck_8h_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="_class_deck">Deck</link>(<emphasis role="keywordtype">int</emphasis>&#32;numDecks);
<anchor xml:id="__deck_8h_source_1l00026"/>00026 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rule&#32;of&#32;Three</emphasis>
<anchor xml:id="__deck_8h_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<link linkend="_class_deck">Deck</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_deck">Deck</link>&amp;&#32;other);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;constructor</emphasis>
<anchor xml:id="__deck_8h_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<link linkend="_class_deck">Deck</link>&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_deck">Deck</link>&amp;&#32;other);&#32;&#32;<emphasis role="comment">//&#32;Assignment&#32;operator</emphasis>
<anchor xml:id="__deck_8h_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<link linkend="_class_deck">~Deck</link>();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Destructor</emphasis>
<anchor xml:id="__deck_8h_source_1l00031"/>00031 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Deck&#32;operations</emphasis>
<anchor xml:id="__deck_8h_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;shuffle();
<anchor xml:id="__deck_8h_source_1l00034"/>00034 &#32;&#32;&#32;&#32;T&#32;drawCard();
<anchor xml:id="__deck_8h_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isEmpty()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__deck_8h_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remainingCards()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__deck_8h_source_1l00037"/>00037 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Operator&#32;overloading</emphasis>
<anchor xml:id="__deck_8h_source_1l00039"/>00039 &#32;&#32;&#32;&#32;T&#32;operator[](<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__deck_8h_source_1l00040"/>00040 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Friend&#32;class&#32;for&#32;debugging/logging</emphasis>
<anchor xml:id="__deck_8h_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;U&gt;
<anchor xml:id="__deck_8h_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>DeckLogger;
<anchor xml:id="__deck_8h_source_1l00044"/>00044 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00045"/>00045 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__deck_8h_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;initializeDeck(<emphasis role="keywordtype">int</emphasis>&#32;numDecks);
<anchor xml:id="__deck_8h_source_1l00047"/>00047 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00048"/>00048 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="__deck_8h_source_1l00049"/>00049 &#32;&#32;&#32;&#32;vector&lt;T&gt;&#32;cards;
<anchor xml:id="__deck_8h_source_1l00050"/>00050 &#32;&#32;&#32;&#32;vector&lt;T&gt;&#32;dealtCards;&#32;&#32;<emphasis role="comment">//&#32;Track&#32;dealt&#32;cards&#32;to&#32;prevent&#32;duplicates</emphasis>
<anchor xml:id="__deck_8h_source_1l00051"/>00051 &#32;&#32;&#32;&#32;random_device&#32;rd;
<anchor xml:id="__deck_8h_source_1l00052"/>00052 &#32;&#32;&#32;&#32;mt19937&#32;gen;
<anchor xml:id="__deck_8h_source_1l00053"/>00053 };
<anchor xml:id="__deck_8h_source_1l00054"/>00054 
<anchor xml:id="__deck_8h_source_1l00055"/>00055 <emphasis role="comment">//&#32;Template&#32;implementation</emphasis>
<anchor xml:id="__deck_8h_source_1l00056"/>00056 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00057"/>00057 <link linkend="_class_deck">Deck&lt;T&gt;::Deck</link>()&#32;:&#32;gen(rd())&#32;{
<anchor xml:id="__deck_8h_source_1l00058"/>00058 &#32;&#32;&#32;&#32;initializeDeck(1);&#32;&#32;<emphasis role="comment">//&#32;Default&#32;to&#32;one&#32;deck</emphasis>
<anchor xml:id="__deck_8h_source_1l00059"/>00059 }
<anchor xml:id="__deck_8h_source_1l00060"/>00060 
<anchor xml:id="__deck_8h_source_1l00061"/>00061 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00062"/>00062 <link linkend="_class_deck">Deck&lt;T&gt;::Deck</link>(<emphasis role="keywordtype">int</emphasis>&#32;numDecks)&#32;:&#32;gen(rd())&#32;{
<anchor xml:id="__deck_8h_source_1l00063"/>00063 &#32;&#32;&#32;&#32;initializeDeck(numDecks);
<anchor xml:id="__deck_8h_source_1l00064"/>00064 }
<anchor xml:id="__deck_8h_source_1l00065"/>00065 
<anchor xml:id="__deck_8h_source_1l00066"/>00066 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00067"/>00067 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_deck">Deck&lt;T&gt;::initializeDeck</link>(<emphasis role="keywordtype">int</emphasis>&#32;numDecks)&#32;{
<anchor xml:id="__deck_8h_source_1l00068"/>00068 &#32;&#32;&#32;&#32;cards.clear();
<anchor xml:id="__deck_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;dealtCards.clear();&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;dealt&#32;cards&#32;when&#32;reinitializing</emphasis>
<anchor xml:id="__deck_8h_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;deck&#32;=&#32;0;&#32;deck&#32;&lt;&#32;numDecks;&#32;++deck)&#32;{
<anchor xml:id="__deck_8h_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;suit&#32;=&#32;0;&#32;suit&#32;&lt;&#32;4;&#32;++suit)&#32;{
<anchor xml:id="__deck_8h_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;1;&#32;value&#32;&lt;=&#32;13;&#32;++value)&#32;{
<anchor xml:id="__deck_8h_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cards.push_back(T(value,&#32;<emphasis role="keyword">static_cast&lt;</emphasis>typename&#32;T::Suit<emphasis role="keyword">&gt;</emphasis>(suit)));
<anchor xml:id="__deck_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00077"/>00077 }
<anchor xml:id="__deck_8h_source_1l00078"/>00078 
<anchor xml:id="__deck_8h_source_1l00079"/>00079 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00080"/>00080 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_deck">Deck&lt;T&gt;::shuffle</link>()&#32;{
<anchor xml:id="__deck_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;std::random_shuffle(cards.begin(),&#32;cards.end());&#32;&#32;<emphasis role="comment">//&#32;Changed&#32;to&#32;random_shuffle</emphasis>
<anchor xml:id="__deck_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;dealtCards.clear();&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;dealt&#32;cards&#32;tracking&#32;when&#32;shuffling</emphasis>
<anchor xml:id="__deck_8h_source_1l00083"/>00083 }
<anchor xml:id="__deck_8h_source_1l00084"/>00084 
<anchor xml:id="__deck_8h_source_1l00085"/>00085 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00086"/>00086 T&#32;<link linkend="_class_deck">Deck&lt;T&gt;::drawCard</link>()&#32;{
<anchor xml:id="__deck_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isEmpty())&#32;{
<anchor xml:id="__deck_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;runtime_error(<emphasis role="stringliteral">&quot;Deck&#32;is&#32;empty&quot;</emphasis>);
<anchor xml:id="__deck_8h_source_1l00089"/>00089 &#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00090"/>00090 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00091"/>00091 &#32;&#32;&#32;&#32;T&#32;card&#32;=&#32;cards.back();
<anchor xml:id="__deck_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;cards.pop_back();
<anchor xml:id="__deck_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;duplicates</emphasis>
<anchor xml:id="__deck_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;dealtCard&#32;:&#32;dealtCards)&#32;{
<anchor xml:id="__deck_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card&#32;==&#32;dealtCard)&#32;{
<anchor xml:id="__deck_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reinitialize&#32;deck&#32;if&#32;duplicate&#32;found</emphasis>
<anchor xml:id="__deck_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initializeDeck(6);
<anchor xml:id="__deck_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shuffle();
<anchor xml:id="__deck_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drawCard();
<anchor xml:id="__deck_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00102"/>00102 &#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00103"/>00103 &#32;&#32;&#32;&#32;
<anchor xml:id="__deck_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;dealtCards.push_back(card);
<anchor xml:id="__deck_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;card;
<anchor xml:id="__deck_8h_source_1l00106"/>00106 }
<anchor xml:id="__deck_8h_source_1l00107"/>00107 
<anchor xml:id="__deck_8h_source_1l00108"/>00108 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00109"/>00109 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_deck">Deck&lt;T&gt;::isEmpty</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__deck_8h_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cards.empty();
<anchor xml:id="__deck_8h_source_1l00111"/>00111 }
<anchor xml:id="__deck_8h_source_1l00112"/>00112 
<anchor xml:id="__deck_8h_source_1l00113"/>00113 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00114"/>00114 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_deck">Deck&lt;T&gt;::remainingCards</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__deck_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cards.size();
<anchor xml:id="__deck_8h_source_1l00116"/>00116 }
<anchor xml:id="__deck_8h_source_1l00117"/>00117 
<anchor xml:id="__deck_8h_source_1l00118"/>00118 <emphasis role="comment">//&#32;Copy&#32;constructor</emphasis>
<anchor xml:id="__deck_8h_source_1l00119"/>00119 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00120"/>00120 <link linkend="_class_deck">Deck&lt;T&gt;::Deck</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_deck">Deck</link>&amp;&#32;other)&#32;:&#32;gen(rd())&#32;{
<anchor xml:id="__deck_8h_source_1l00121"/>00121 &#32;&#32;&#32;&#32;cards&#32;=&#32;other.cards;
<anchor xml:id="__deck_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;dealtCards&#32;=&#32;other.dealtCards;
<anchor xml:id="__deck_8h_source_1l00123"/>00123 }
<anchor xml:id="__deck_8h_source_1l00124"/>00124 
<anchor xml:id="__deck_8h_source_1l00125"/>00125 <emphasis role="comment">//&#32;Assignment&#32;operator</emphasis>
<anchor xml:id="__deck_8h_source_1l00126"/>00126 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00127"/>00127 <link linkend="_class_deck">Deck&lt;T&gt;</link>&amp;&#32;<link linkend="_class_deck">Deck&lt;T&gt;::operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_deck">Deck</link>&amp;&#32;other)&#32;{
<anchor xml:id="__deck_8h_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;other)&#32;{
<anchor xml:id="__deck_8h_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cards&#32;=&#32;other.cards;
<anchor xml:id="__deck_8h_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealtCards&#32;=&#32;other.dealtCards;
<anchor xml:id="__deck_8h_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__deck_8h_source_1l00133"/>00133 }
<anchor xml:id="__deck_8h_source_1l00134"/>00134 
<anchor xml:id="__deck_8h_source_1l00135"/>00135 <emphasis role="comment">//&#32;Destructor</emphasis>
<anchor xml:id="__deck_8h_source_1l00136"/>00136 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00137"/>00137 <link linkend="_class_deck">Deck&lt;T&gt;::~Deck</link>()&#32;{
<anchor xml:id="__deck_8h_source_1l00138"/>00138 &#32;&#32;&#32;&#32;cards.clear();
<anchor xml:id="__deck_8h_source_1l00139"/>00139 &#32;&#32;&#32;&#32;dealtCards.clear();
<anchor xml:id="__deck_8h_source_1l00140"/>00140 }
<anchor xml:id="__deck_8h_source_1l00141"/>00141 
<anchor xml:id="__deck_8h_source_1l00142"/>00142 <emphasis role="comment">//&#32;Subscript&#32;operator</emphasis>
<anchor xml:id="__deck_8h_source_1l00143"/>00143 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__deck_8h_source_1l00144"/>00144 T&#32;<link linkend="_class_deck">Deck&lt;T&gt;::operator[]</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__deck_8h_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&lt;&#32;0&#32;||&#32;index&#32;&gt;=&#32;cards.size())&#32;{
<anchor xml:id="__deck_8h_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;out_of_range(<emphasis role="stringliteral">&quot;Index&#32;out&#32;of&#32;range&quot;</emphasis>);
<anchor xml:id="__deck_8h_source_1l00147"/>00147 &#32;&#32;&#32;&#32;}
<anchor xml:id="__deck_8h_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cards[index];
<anchor xml:id="__deck_8h_source_1l00149"/>00149 }
<anchor xml:id="__deck_8h_source_1l00150"/>00150 
<anchor xml:id="__deck_8h_source_1l00151"/>00151 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;DECK_H</emphasis>
</programlisting></section>
