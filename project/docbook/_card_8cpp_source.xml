<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__card_8cpp_source" xml:lang="en-US">
<title>Card.cpp</title>
<programlisting linenumbering="unnumbered"><anchor xml:id="__card_8cpp_source_1l00001"/>00001 <emphasis role="comment">/*&#32;</emphasis>
<anchor xml:id="__card_8cpp_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;File:&#32;&#32;&#32;Card.cpp</emphasis>
<anchor xml:id="__card_8cpp_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Author:&#32;Ireoluwa&#32;Dairo</emphasis>
<anchor xml:id="__card_8cpp_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;</emphasis>
<anchor xml:id="__card_8cpp_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Created&#32;on&#32;November&#32;27,&#32;2024,&#32;3:46&#32;PM</emphasis>
<anchor xml:id="__card_8cpp_source_1l00006"/>00006 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__card_8cpp_source_1l00007"/>00007 
<anchor xml:id="__card_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;Card.h&quot;</emphasis>
<anchor xml:id="__card_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
<anchor xml:id="__card_8cpp_source_1l00010"/>00010 
<anchor xml:id="__card_8cpp_source_1l00011"/>00011 <emphasis role="comment">//&#32;Initialize&#32;static&#32;member</emphasis>
<anchor xml:id="__card_8cpp_source_1l00012"/>00012 <emphasis role="keywordtype">int</emphasis>&#32;Card::cardCount&#32;=&#32;0;
<anchor xml:id="__card_8cpp_source_1l00013"/>00013 
<anchor xml:id="__card_8cpp_source_1l00014"/>00014 <emphasis role="comment">//&#32;Default&#32;Constructor</emphasis>
<anchor xml:id="__card_8cpp_source_1l00015"/>00015 Card::Card()&#32;:&#32;value(1),&#32;suit(Suit::HEARTS)&#32;{
<anchor xml:id="__card_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;cardCount++;
<anchor xml:id="__card_8cpp_source_1l00017"/>00017 }
<anchor xml:id="__card_8cpp_source_1l00018"/>00018 
<anchor xml:id="__card_8cpp_source_1l00019"/>00019 <emphasis role="comment">//&#32;Parameterized&#32;Constructor</emphasis>
<anchor xml:id="__card_8cpp_source_1l00020"/>00020 Card::Card(<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;Suit&#32;suit)&#32;:&#32;suit(suit)&#32;{
<anchor xml:id="__card_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;validateValue(value);
<anchor xml:id="__card_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;this-&gt;value&#32;=&#32;value;
<anchor xml:id="__card_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;cardCount++;
<anchor xml:id="__card_8cpp_source_1l00024"/>00024 }
<anchor xml:id="__card_8cpp_source_1l00025"/>00025 
<anchor xml:id="__card_8cpp_source_1l00026"/>00026 <emphasis role="comment">//&#32;Copy&#32;Constructor</emphasis>
<anchor xml:id="__card_8cpp_source_1l00027"/>00027 Card::Card(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)&#32;:&#32;value(other.value),&#32;suit(other.suit)&#32;{
<anchor xml:id="__card_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;cardCount++;
<anchor xml:id="__card_8cpp_source_1l00029"/>00029 }
<anchor xml:id="__card_8cpp_source_1l00030"/>00030 
<anchor xml:id="__card_8cpp_source_1l00031"/>00031 <emphasis role="comment">//&#32;Destructor</emphasis>
<anchor xml:id="__card_8cpp_source_1l00032"/>00032 Card::~Card()&#32;{
<anchor xml:id="__card_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;cardCount--;
<anchor xml:id="__card_8cpp_source_1l00034"/>00034 }
<anchor xml:id="__card_8cpp_source_1l00035"/>00035 
<anchor xml:id="__card_8cpp_source_1l00036"/>00036 <emphasis role="comment">//&#32;Validate&#32;card&#32;value</emphasis>
<anchor xml:id="__card_8cpp_source_1l00037"/>00037 <emphasis role="keywordtype">void</emphasis>&#32;Card::validateValue(<emphasis role="keywordtype">int</emphasis>&#32;val)&#32;{
<anchor xml:id="__card_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&lt;&#32;1&#32;||&#32;val&#32;&gt;&#32;13)&#32;{
<anchor xml:id="__card_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::invalid_argument(<emphasis role="stringliteral">&quot;Card&#32;value&#32;must&#32;be&#32;between&#32;1&#32;and&#32;13&quot;</emphasis>);
<anchor xml:id="__card_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00041"/>00041 }
<anchor xml:id="__card_8cpp_source_1l00042"/>00042 
<anchor xml:id="__card_8cpp_source_1l00043"/>00043 <emphasis role="comment">//&#32;Get&#32;suit&#32;as&#32;string</emphasis>
<anchor xml:id="__card_8cpp_source_1l00044"/>00044 std::string&#32;Card::getSuitString()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(suit)&#32;{
<anchor xml:id="__card_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::HEARTS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Hearts&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::DIAMONDS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Diamonds&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::CLUBS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Clubs&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::SPADES:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Spades&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Unknown&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00052"/>00052 }
<anchor xml:id="__card_8cpp_source_1l00053"/>00053 
<anchor xml:id="__card_8cpp_source_1l00054"/>00054 <emphasis role="comment">//&#32;Get&#32;value&#32;as&#32;string</emphasis>
<anchor xml:id="__card_8cpp_source_1l00055"/>00055 std::string&#32;Card::getValueString()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(value)&#32;{
<anchor xml:id="__card_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Ace&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;11:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Jack&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;12:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Queen&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;13:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;King&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::to_string(value);
<anchor xml:id="__card_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00063"/>00063 }
<anchor xml:id="__card_8cpp_source_1l00064"/>00064 
<anchor xml:id="__card_8cpp_source_1l00065"/>00065 <emphasis role="comment">//&#32;Equality&#32;operator</emphasis>
<anchor xml:id="__card_8cpp_source_1l00066"/>00066 <emphasis role="keywordtype">bool</emphasis>&#32;Card::operator==(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(value&#32;==&#32;other.value)&#32;&amp;&amp;&#32;(suit&#32;==&#32;other.suit);
<anchor xml:id="__card_8cpp_source_1l00068"/>00068 }
<anchor xml:id="__card_8cpp_source_1l00069"/>00069 
<anchor xml:id="__card_8cpp_source_1l00070"/>00070 <emphasis role="comment">//&#32;Inequality&#32;operator</emphasis>
<anchor xml:id="__card_8cpp_source_1l00071"/>00071 <emphasis role="keywordtype">bool</emphasis>&#32;Card::operator!=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(*<emphasis role="keyword">this</emphasis>&#32;==&#32;other);
<anchor xml:id="__card_8cpp_source_1l00073"/>00073 }
<anchor xml:id="__card_8cpp_source_1l00074"/>00074 
<anchor xml:id="__card_8cpp_source_1l00075"/>00075 <emphasis role="comment">//&#32;Assignment&#32;operator</emphasis>
<anchor xml:id="__card_8cpp_source_1l00076"/>00076 <link linkend="_class_card">Card</link>&amp;&#32;Card::operator=(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)&#32;{
<anchor xml:id="__card_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;other)&#32;{
<anchor xml:id="__card_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;other.value;
<anchor xml:id="__card_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suit&#32;=&#32;other.suit;
<anchor xml:id="__card_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00082"/>00082 }
<anchor xml:id="__card_8cpp_source_1l00083"/>00083 
<anchor xml:id="__card_8cpp_source_1l00084"/>00084 <emphasis role="comment">//&#32;Static&#32;method&#32;to&#32;get&#32;total&#32;card&#32;count</emphasis>
<anchor xml:id="__card_8cpp_source_1l00085"/>00085 <emphasis role="keywordtype">int</emphasis>&#32;Card::getNumCardsCreated()&#32;{
<anchor xml:id="__card_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cardCount;
<anchor xml:id="__card_8cpp_source_1l00087"/>00087 }
<anchor xml:id="__card_8cpp_source_1l00088"/>00088 
<anchor xml:id="__card_8cpp_source_1l00089"/>00089 <emphasis role="comment">//&#32;Friend&#32;output&#32;operator</emphasis>
<anchor xml:id="__card_8cpp_source_1l00090"/>00090 std::ostream&amp;&#32;operator&lt;&lt;(std::ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;card)&#32;{
<anchor xml:id="__card_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;card.getValueString()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;of&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;card.getSuitString();
<anchor xml:id="__card_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
<anchor xml:id="__card_8cpp_source_1l00093"/>00093 }
</programlisting></section>
