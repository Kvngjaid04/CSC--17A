<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_deck" xml:lang="en-US">
<title>Deck&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Deck&lt; T &gt;</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_deck_1a5684451039c5e904d78b6d4b41d55f5d">Deck</link> (int numDecks)</para>
</listitem>
            <listitem><para><link linkend="_class_deck_1abb77cc39bbcab549f48a922e77019725">Deck</link> (const <link linkend="_class_deck">Deck</link> &amp;other)</para>
</listitem>
            <listitem><para><link linkend="_class_deck">Deck</link> &amp; <link linkend="_class_deck_1a94f54672e990b364ccb0f7024d960234">operator=</link> (const <link linkend="_class_deck">Deck</link> &amp;other)</para>
</listitem>
            <listitem><para>void <link linkend="_class_deck_1a64897016baf6e1c48f632dcc807096e7">shuffle</link> ()</para>
</listitem>
            <listitem><para>T <link linkend="_class_deck_1a08384299dc4e9ebdf3d10db7ef118753">drawCard</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_deck_1a2b221bd7933edfaeb7c9ede9030f29dc">isEmpty</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_class_deck_1ae5b40fb689e6ad018b541e8c6a78b4c4">remainingCards</link> () const</para>
</listitem>
            <listitem><para>T <link linkend="_class_deck_1a05ea3a7fa0b033dc9d7b984c7a51effe">operator[]</link> (int index) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_deck_1a7cfbcff938d01fc5580a613003767981">initializeDeck</link> (int numDecks)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename U &gt; </para><para>class <link linkend="_class_deck_1ab94da4fd43709744115e172ef2ee4223">DeckLogger</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T = Card&gt;<?linebreak?>class Deck&lt; T &gt;</title></simplesect>
<para>
Definition at line <link linkend="__deck_8h_source_1l00021">21</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_deck_1a7cb6b63b067cdaf3de1baeb5534d7271"/><section>
    <title>Deck()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;<link linkend="_class_deck">::Deck</link> ( )</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00057">57</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a5684451039c5e904d78b6d4b41d55f5d"/><section>
    <title>Deck()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;<link linkend="_class_deck">::Deck</link> (int numDecks)</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00062">62</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1abb77cc39bbcab549f48a922e77019725"/><section>
    <title>Deck()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;<link linkend="_class_deck">::Deck</link> (const <link linkend="_class_deck">Deck</link>&lt; T &gt; &amp; other)</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00120">120</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1ab3294d971f9ecf25fd92d982aa2efad9"/><section>
    <title>~Deck()</title>
<indexterm><primary>~Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>~Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;::~<link linkend="_class_deck">Deck</link> ( )</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00137">137</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_deck_1a08384299dc4e9ebdf3d10db7ef118753"/><section>
    <title>drawCard()</title>
<indexterm><primary>drawCard</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>drawCard</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_class_deck">Deck</link>&lt; T &gt;::drawCard ( )</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00086">86</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a7cfbcff938d01fc5580a613003767981"/><section>
    <title>initializeDeck()</title>
<indexterm><primary>initializeDeck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>initializeDeck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_deck">Deck</link>&lt; T &gt;::initializeDeck (int numDecks)<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00067">67</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a2b221bd7933edfaeb7c9ede9030f29dc"/><section>
    <title>isEmpty()</title>
<indexterm><primary>isEmpty</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>isEmpty</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_deck">Deck</link>&lt; T &gt;::isEmpty ( ) const</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00109">109</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a94f54672e990b364ccb0f7024d960234"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt; &amp; <link linkend="_class_deck">Deck</link>&lt; T &gt;::operator= (const <link linkend="_class_deck">Deck</link>&lt; T &gt; &amp; other)</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00127">127</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a05ea3a7fa0b033dc9d7b984c7a51effe"/><section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_class_deck">Deck</link>&lt; T &gt;::operator[] (int index) const</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00144">144</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1ae5b40fb689e6ad018b541e8c6a78b4c4"/><section>
    <title>remainingCards()</title>
<indexterm><primary>remainingCards</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>remainingCards</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>int <link linkend="_class_deck">Deck</link>&lt; T &gt;::remainingCards ( ) const</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00114">114</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a64897016baf6e1c48f632dcc807096e7"/><section>
    <title>shuffle()</title>
<indexterm><primary>shuffle</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>shuffle</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_deck">Deck</link>&lt; T &gt;::shuffle ( )</computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00080">80</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_class_deck_1ab94da4fd43709744115e172ef2ee4223"/><section>
    <title>DeckLogger</title>
<indexterm><primary>DeckLogger</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>DeckLogger</secondary></indexterm>
<computeroutput>template&lt;typename T  = Card&gt; </computeroutput><computeroutput>template&lt;typename U &gt; </computeroutput><para><computeroutput>friend class DeckLogger<computeroutput>[friend]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__deck_8h_source_1l00043">43</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Deck.h</section>
</section>
