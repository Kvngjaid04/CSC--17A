<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__card_8cpp_source" xml:lang="en-US">
<title>Card.cpp</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__card_8cpp_source_1l00001"/>00001 
<anchor xml:id="__card_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__card_8h">Card.h</link>&quot;</emphasis>
<anchor xml:id="__card_8cpp_source_1l00009"/>00009 
<anchor xml:id="__card_8cpp_source_1l00010"/>00010 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="__card_8cpp_source_1l00011"/>00011 
<anchor xml:id="__card_8cpp_source_1l00013"/>00013 <emphasis role="keywordtype">int</emphasis>&#32;Card::cardCount&#32;=&#32;0;
<anchor xml:id="__card_8cpp_source_1l00014"/>00014 
<anchor xml:id="__card_8cpp_source_1l00019"/><link linkend="_class_card_1a783f5854cbe8c183ee3d4414c01472c0">00019</link> <link linkend="_class_card_1a783f5854cbe8c183ee3d4414c01472c0">Card::Card</link>()&#32;:&#32;value(1),&#32;suit(<link linkend="_class_card_1a5725a8e05afab8cd2f555bd81b069860">Suit</link>::HEARTS)&#32;{
<anchor xml:id="__card_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;cardCount++;
<anchor xml:id="__card_8cpp_source_1l00021"/>00021 }
<anchor xml:id="__card_8cpp_source_1l00022"/>00022 
<anchor xml:id="__card_8cpp_source_1l00028"/><link linkend="_class_card_1a9089c1bb6ba4f759dcca716e6ff42f54">00028</link> <link linkend="_class_card_1a783f5854cbe8c183ee3d4414c01472c0">Card::Card</link>(<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;<link linkend="_class_card_1a5725a8e05afab8cd2f555bd81b069860">Suit</link>&#32;suit)&#32;:&#32;suit(suit)&#32;{
<anchor xml:id="__card_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;validateValue(value);
<anchor xml:id="__card_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;this-&gt;value&#32;=&#32;value;
<anchor xml:id="__card_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;cardCount++;
<anchor xml:id="__card_8cpp_source_1l00032"/>00032 }
<anchor xml:id="__card_8cpp_source_1l00033"/>00033 
<anchor xml:id="__card_8cpp_source_1l00038"/><link linkend="_class_card_1a38013f9863853a4de0d6e1d3be20ca03">00038</link> <link linkend="_class_card_1a783f5854cbe8c183ee3d4414c01472c0">Card::Card</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)&#32;:&#32;value(other.value),&#32;suit(other.suit)&#32;{
<anchor xml:id="__card_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;cardCount++;
<anchor xml:id="__card_8cpp_source_1l00040"/>00040 }
<anchor xml:id="__card_8cpp_source_1l00041"/>00041 
<anchor xml:id="__card_8cpp_source_1l00046"/><link linkend="_class_card_1a4e05b0b68e43e5e76c6194458cee874f">00046</link> <link linkend="_class_card_1a4e05b0b68e43e5e76c6194458cee874f">Card::~Card</link>()&#32;{
<anchor xml:id="__card_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;cardCount--;
<anchor xml:id="__card_8cpp_source_1l00048"/>00048 }
<anchor xml:id="__card_8cpp_source_1l00049"/>00049 
<anchor xml:id="__card_8cpp_source_1l00055"/>00055 <emphasis role="keywordtype">void</emphasis>&#32;Card::validateValue(<emphasis role="keywordtype">int</emphasis>&#32;val)&#32;{
<anchor xml:id="__card_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&lt;&#32;1&#32;||&#32;val&#32;&gt;&#32;13)&#32;{
<anchor xml:id="__card_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Invalid&#32;card&#32;value,&#32;Must&#32;be&#32;between&#32;1&#32;and&#32;13.\n&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00060"/>00060 }
<anchor xml:id="__card_8cpp_source_1l00061"/>00061 
<anchor xml:id="__card_8cpp_source_1l00066"/><link linkend="_class_card_1a5e70c8ac94f7e7a95212e7ed00967da5">00066</link> <emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_card_1a5e70c8ac94f7e7a95212e7ed00967da5">Card::getSuitString</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(suit)&#32;{
<anchor xml:id="__card_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::HEARTS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Hearts&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::DIAMONDS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Diamonds&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::CLUBS:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Clubs&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Suit::SPADES:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Spades&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Unknown&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__card_8cpp_source_1l00075"/>00075 
<anchor xml:id="__card_8cpp_source_1l00080"/><link linkend="_class_card_1aec176a6f90ddf2bac50d3ade4382f0a2">00080</link> <emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_card_1aec176a6f90ddf2bac50d3ade4382f0a2">Card::getValueString</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(value)&#32;{
<anchor xml:id="__card_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Ace&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;11:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Jack&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;12:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Queen&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;13:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;King&quot;</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;to_string(value);
<anchor xml:id="__card_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00088"/>00088 }
<anchor xml:id="__card_8cpp_source_1l00089"/>00089 
<anchor xml:id="__card_8cpp_source_1l00095"/><link linkend="_class_card_1a72af3c8dc8c8d30901166e0bb36e0112">00095</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_card_1a72af3c8dc8c8d30901166e0bb36e0112">Card::operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(value&#32;==&#32;other.value)&#32;&amp;&amp;&#32;(suit&#32;==&#32;other.suit);
<anchor xml:id="__card_8cpp_source_1l00097"/>00097 }
<anchor xml:id="__card_8cpp_source_1l00098"/>00098 
<anchor xml:id="__card_8cpp_source_1l00104"/><link linkend="_class_card_1aff83c9c9c5b077e7f7cc6aa738feed25">00104</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_card_1aff83c9c9c5b077e7f7cc6aa738feed25">Card::operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__card_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(*<emphasis role="keyword">this</emphasis>&#32;==&#32;other);
<anchor xml:id="__card_8cpp_source_1l00106"/>00106 }
<anchor xml:id="__card_8cpp_source_1l00107"/>00107 
<anchor xml:id="__card_8cpp_source_1l00113"/><link linkend="_class_card_1ad2ec2f42129790f79948297c128fba9f">00113</link> <link linkend="_class_card">Card</link>&amp;&#32;<link linkend="_class_card_1ad2ec2f42129790f79948297c128fba9f">Card::operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;other)&#32;{
<anchor xml:id="__card_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;other)&#32;{
<anchor xml:id="__card_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;other.value;
<anchor xml:id="__card_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;suit&#32;=&#32;other.suit;
<anchor xml:id="__card_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;}
<anchor xml:id="__card_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__card_8cpp_source_1l00119"/>00119 }
<anchor xml:id="__card_8cpp_source_1l00120"/>00120 
<anchor xml:id="__card_8cpp_source_1l00125"/><link linkend="_class_card_1a3e30db73c71f875fb07ba04c59afb95e">00125</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_card_1a3e30db73c71f875fb07ba04c59afb95e">Card::getNumCardsCreated</link>()&#32;{
<anchor xml:id="__card_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cardCount;
<anchor xml:id="__card_8cpp_source_1l00127"/>00127 }
<anchor xml:id="__card_8cpp_source_1l00128"/>00128 
<anchor xml:id="__card_8cpp_source_1l00135"/><link linkend="__card_8cpp_1afca3531cbc62b8f6f63365dec9728970">00135</link> ostream&amp;&#32;<link linkend="__card_8cpp_1afca3531cbc62b8f6f63365dec9728970">operator&lt;&lt;</link>(ostream&amp;&#32;os,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_card">Card</link>&amp;&#32;card)&#32;{
<anchor xml:id="__card_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;os&#32;&lt;&lt;&#32;card.<link linkend="_class_card_1aec176a6f90ddf2bac50d3ade4382f0a2">getValueString</link>()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;of&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;card.<link linkend="_class_card_1a5e70c8ac94f7e7a95212e7ed00967da5">getSuitString</link>();
<anchor xml:id="__card_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
<anchor xml:id="__card_8cpp_source_1l00138"/>00138 }
</programlisting></section>
