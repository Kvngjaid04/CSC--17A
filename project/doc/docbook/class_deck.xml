<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_deck" xml:lang="en-US">
<title>Deck&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Deck&lt; T &gt;</primary></indexterm>
<para>

<para>Template class representing a deck of cards. </para>
 
</para>
<para>
<computeroutput>#include &lt;Deck.h&gt;</computeroutput>
</para>
Inheritance diagram for Deck&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_deck__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Deck&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_deck__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_deck_1a7cb6b63b067cdaf3de1baeb5534d7271">Deck</link> ()</para>

<para>Default constructor. Initializes a single deck. </para>
</listitem>
            <listitem><para><link linkend="_class_deck_1a5684451039c5e904d78b6d4b41d55f5d">Deck</link> (int numDecks)</para>

<para>Constructor for multiple decks. </para>
</listitem>
            <listitem><para><link linkend="_class_deck_1abb77cc39bbcab549f48a922e77019725">Deck</link> (const <link linkend="_class_deck">Deck</link> &amp;other)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_deck">Deck</link> &amp; <link linkend="_class_deck_1a94f54672e990b364ccb0f7024d960234">operator=</link> (const <link linkend="_class_deck">Deck</link> &amp;other)</para>

<para>Assignment operator. </para>
</listitem>
            <listitem><para><link linkend="_class_deck_1ab3294d971f9ecf25fd92d982aa2efad9">~Deck</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_class_deck_1a64897016baf6e1c48f632dcc807096e7">shuffle</link> ()</para>

<para>Shuffle the deck. Randomizes card order and clears dealt cards tracking. </para>
</listitem>
            <listitem><para>T <link linkend="_class_deck_1a08384299dc4e9ebdf3d10db7ef118753">drawCard</link> ()</para>

<para>Draw a card from the deck. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_deck_1a2b221bd7933edfaeb7c9ede9030f29dc">isEmpty</link> () const</para>

<para>Check if deck is empty. </para>
</listitem>
            <listitem><para>int <link linkend="_class_deck_1ae5b40fb689e6ad018b541e8c6a78b4c4">remainingCards</link> () const</para>

<para>Get number of remaining cards. </para>
</listitem>
            <listitem><para>T <link linkend="_class_deck_1a05ea3a7fa0b033dc9d7b984c7a51effe">operator[]</link> (int index) const</para>

<para>Array subscript operator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_deck_1a7cfbcff938d01fc5580a613003767981">initializeDeck</link> (int numDecks)</para>

<para>Initialize deck(s) with cards. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename U &gt; </para><para>class <link linkend="_class_deck_1ab94da4fd43709744115e172ef2ee4223">DeckLogger</link></para>

<para>Friend class for debugging purposes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T = Card&gt;<?linebreak?>class Deck&lt; T &gt;</title></simplesect>

<para>Template class representing a deck of cards. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para><link linkend="_class_card">Card</link> type that comprises the deck (defaults to <link linkend="_class_card">Card</link> class) Implements a deck of cards with shuffle, draw and tracking functionality. Supports multiple deck initialization and duplicate card detection. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00027">27</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_deck_1a7cb6b63b067cdaf3de1baeb5534d7271"/><section>
    <title>Deck()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;<link linkend="_class_deck">::Deck</link> ( )</computeroutput></para><para>

<para>Default constructor. Initializes a single deck. </para>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00107">107</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_deck_a7cb6b63b067cdaf3de1baeb5534d7271_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_deck_1a5684451039c5e904d78b6d4b41d55f5d"/><section>
    <title>Deck()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;<link linkend="_class_deck">::Deck</link> (int numDecks)</computeroutput></para><para>

<para>Constructor for multiple decks. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>numDecks</entry><entry>
<para>Number of decks to initialize </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00112">112</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_deck_a5684451039c5e904d78b6d4b41d55f5d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_deck_1abb77cc39bbcab549f48a922e77019725"/><section>
    <title>Deck()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;<link linkend="_class_deck">::Deck</link> (const <link linkend="_class_deck">Deck</link>&lt; T &gt; &amp; other)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para><link linkend="_class_deck">Deck</link> to copy from </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00171">171</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1ab3294d971f9ecf25fd92d982aa2efad9"/><section>
    <title>~Deck()</title>
<indexterm><primary>~Deck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>~Deck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt;::~<link linkend="_class_deck">Deck</link> ( )</computeroutput></para><para>

<para>Destructor. </para>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00188">188</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_deck_1a08384299dc4e9ebdf3d10db7ef118753"/><section>
    <title>drawCard()</title>
<indexterm><primary>drawCard</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>drawCard</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_class_deck">Deck</link>&lt; T &gt;::drawCard ( )</computeroutput></para><para>

<para>Draw a card from the deck. </para>
</para>

<para><formalpara><title>Returns</title>

<para>T The drawn card </para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>runtime_error</entry><entry>
<para>if deck is empty </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>Automatically reinitializes deck if duplicate card detected </para>
</note>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00136">136</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a7cfbcff938d01fc5580a613003767981"/><section>
    <title>initializeDeck()</title>
<indexterm><primary>initializeDeck</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>initializeDeck</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_deck">Deck</link>&lt; T &gt;::initializeDeck (int numDecks)<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Initialize deck(s) with cards. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>numDecks</entry><entry>
<para>Number of decks to initialize </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00117">117</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_deck_a7cfbcff938d01fc5580a613003767981_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_deck_1a2b221bd7933edfaeb7c9ede9030f29dc"/><section>
    <title>isEmpty()</title>
<indexterm><primary>isEmpty</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>isEmpty</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_deck">Deck</link>&lt; T &gt;::isEmpty ( ) const</computeroutput></para><para>

<para>Check if deck is empty. </para>
</para>

<para><formalpara><title>Returns</title>

<para>bool True if no cards remain </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00160">160</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a94f54672e990b364ccb0f7024d960234"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_deck">Deck</link>&lt; T &gt; &amp; <link linkend="_class_deck">Deck</link>&lt; T &gt;::operator= (const <link linkend="_class_deck">Deck</link>&lt; T &gt; &amp; other)</computeroutput></para><para>

<para>Assignment operator. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para><link linkend="_class_deck">Deck</link> to assign from </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><link linkend="_class_deck">Deck</link>&amp; Reference to this deck </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00178">178</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a05ea3a7fa0b033dc9d7b984c7a51effe"/><section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_class_deck">Deck</link>&lt; T &gt;::operator[] (int index) const</computeroutput></para><para>

<para>Array subscript operator. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>index</entry><entry>
<para>Index of card to access </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>T <link linkend="_class_card">Card</link> at specified index </para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>out_of_range</entry><entry>
<para>if index is invalid </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00195">195</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1ae5b40fb689e6ad018b541e8c6a78b4c4"/><section>
    <title>remainingCards()</title>
<indexterm><primary>remainingCards</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>remainingCards</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>int <link linkend="_class_deck">Deck</link>&lt; T &gt;::remainingCards ( ) const</computeroutput></para><para>

<para>Get number of remaining cards. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int Number of undealt cards </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00165">165</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<anchor xml:id="_class_deck_1a64897016baf6e1c48f632dcc807096e7"/><section>
    <title>shuffle()</title>
<indexterm><primary>shuffle</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>shuffle</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_deck">Deck</link>&lt; T &gt;::shuffle ( )</computeroutput></para><para>

<para>Shuffle the deck. Randomizes card order and clears dealt cards tracking. </para>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00130">130</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_class_deck_1ab94da4fd43709744115e172ef2ee4223"/><section>
    <title>DeckLogger</title>
<indexterm><primary>DeckLogger</primary><secondary>Deck&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Deck&lt; T &gt;</primary><secondary>DeckLogger</secondary></indexterm>
<computeroutput>template&lt;typename T  = Card&gt; </computeroutput><computeroutput>template&lt;typename U &gt; </computeroutput><para><computeroutput>friend class DeckLogger<computeroutput>[friend]</computeroutput></computeroutput></para><para>

<para>Friend class for debugging purposes. </para>
</para>
<para>
Definition at line <link linkend="__deck_8h_source_1l00089">89</link> of file <link linkend="__deck_8h_source">Deck.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
<link linkend="__deck_8h">Deck.h</link></section>
</section>
